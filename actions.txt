- "python -m venv venv" 
    - Create a virtual environment in a subfolder named venv
    - A virtual environment isolates project-specific Python packages from the global environment.
    - After this, there will be a venv folder inside your project root folder.
    - YOU TYPICALLY ONLY RUN THIS ONLY ONCE

- "venv\Scripts\activate"
    - Activate the virtual environment (specific to Windows).
    - Once activated, Python and pip commands will use the versions and packages from inside the venv directory, not the global ones.

- "pip install package1 package2"


- "pip freeze > requirements.txt" 
    - The requirements.txt file doesn't automatically update when you install new packages. You need to explicitly update it


- "pip install -r requirements.txt" 
    - install all the dependencies listed in the requirements.txt file.

#############################################################################################################################    

- "uvicorn app.main:app --reload" 
    - to start the fastapi process 
    - specifically under the "app" folder in "main" file for "app" declaraction


------------------------------------------------------------------------------------------------------------------- 

folder re-naming change

# 1. Remove the old venv directory
Remove-Item -Path .\venv -Recurse -Force

# 2. recreate a new virtual environment:
python -m venv venv

# 3. Activate the new environment
.\venv\Scripts\Activate.ps1

# 4. Reinstall your dependencies
pip install -r requirements.txt


-------------------------------------------------------------------------------------------------------------------


deploy on render you need to add:

- build command: pip install -r requirements.txt

- start command: uvicorn app.main:app --host 0.0.0.0 --port $PORT

- add additional env variable: "PORT: 8000"